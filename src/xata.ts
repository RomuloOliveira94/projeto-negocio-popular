// Generated by Xata Codegen 0.29.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Insumos",
    columns: [
      { name: "name", type: "string" },
      { name: "product_id", type: "link", link: { table: "Produtos" } },
      { name: "measured", type: "string" },
      { name: "quantity", type: "string" },
      { name: "price", type: "float" },
    ],
  },
  {
    name: "Produtos",
    columns: [
      { name: "name", type: "string" },
      { name: "value", type: "int", defaultValue: "0" },
    ],
    revLinks: [{ column: "product_id", table: "Insumos" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Insumos = InferredTypes["Insumos"];
export type InsumosRecord = Insumos & XataRecord;

export type Produtos = InferredTypes["Produtos"];
export type ProdutosRecord = Produtos & XataRecord;

export type DatabaseSchema = {
  Insumos: InsumosRecord;
  Produtos: ProdutosRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://R-mulo-Augusto-s-workspace-vhd5nl.us-east-1.xata.sh/db/negocio-popular",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
